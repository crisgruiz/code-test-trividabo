{"version":3,"sources":["services/getDataFromApi.js","components/Landing.js","services/localStorage.js","components/NoRespond.js","components/Loading.js","components/ChoicesList.js","components/Questions.js","components/Results.js","components/FinalGame.js","components/MainPage.js","components/App.js","index.js"],"names":["Landing","className","to","title","React","Component","randomNum","Math","floor","random","questionsArr","i","randomNumber","push","generateAnswers","correctOption","arr","a","includes","length","sort","generateQuestion","question","questionSplited","split","questionJoined","join","substring","generateQuestionWithAnswers","fetch","then","response","ok","json","Error","status","data","text","number","choices","catch","error","getJSON","key","defaultData","JSON","parse","localStorage","getItem","setJSON","setItem","stringify","NoRespond","Loading","ChoicesList","props","map","choice","id","type","value","name","onClick","saveUserAnswer","Questions","count","answers","handleConfirmAnswer","handleSkip","handleReset","Results","answersList","answer","isCorrect","FinalGame","MainPage","useState","trivia","setTrivia","userAnswer","setUserAnswer","setCount","setAnswersList","useEffect","console","log","e","selectedItem","parseInt","currentTarget","handleNextQuestion","concat","checkAnswer","answerTrivia","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.de93440b.chunk.js","sourcesContent":["const randomNum = () => {\r\n  return Math.floor(Math.random() * 100);\r\n};\r\n\r\nconst getDataFromApi = (a) => {\r\n  return fetch(`http://numbersapi.com/${a || randomNum()}/trivia?json`).then(\r\n    (response) => {\r\n      if (!response.ok) {\r\n        throw Error(response.status);\r\n      } else {\r\n        return response.json();\r\n      }\r\n    }\r\n  );\r\n};\r\n\r\nlet questionsArr = [];\r\nfor (let i = 0; i < 10; i++) {\r\n  let randomNumber = Math.floor(Math.random() * 100);\r\n  questionsArr.push(randomNumber);\r\n}\r\n\r\nconst generateAnswers = (correctOption) => {\r\n  const arr = [correctOption];\r\n  do {\r\n    const a = randomNum();\r\n    if (!arr.includes(a)) {\r\n      arr.push(a);\r\n    }\r\n  } while (arr.length < 4);\r\n  return arr.sort();\r\n};\r\n\r\nconst generateQuestion = (question) => {\r\n  const questionSplited = question.split(\" \");\r\n  questionSplited[0] = \"What\";\r\n  const questionJoined = questionSplited.join(\" \");\r\n  const questionWithoutDot = questionJoined.substring(\r\n    0,\r\n    questionJoined.length - 1\r\n  );\r\n  return questionWithoutDot + \"?\";\r\n};\r\n\r\nconst generateQuestionWithAnswers = () => {\r\n  return getDataFromApi()\r\n    .then((data) => {\r\n      const trivia = {\r\n        text: generateQuestion(data.text),\r\n        number: data.number,\r\n        choices: generateAnswers(data.number),\r\n      };\r\n      return trivia;\r\n    })\r\n    .catch(() => {\r\n      return {\r\n        error: \"fetch error\",\r\n      };\r\n    });\r\n};\r\n\r\nexport {\r\n  randomNum,\r\n  getDataFromApi,\r\n  generateAnswers,\r\n  generateQuestion,\r\n  generateQuestionWithAnswers,\r\n};\r\n","import React from \"react\";\r\nimport \"../styleSheets/layout/_landing.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Landing extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <main className=\"main\">\r\n          <h1 className=\"main__title\">Trividabo</h1>\r\n          <p className=\"main__text\">Welcome to trividabo number quiz</p>\r\n          <Link to=\"/MainPage\" className=\"main__button\" title=\"Start\">\r\n            Start\r\n          </Link>\r\n        </main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Landing;\r\n","export const getJSON = (key, defaultData) => {\r\n  const data = JSON.parse(localStorage.getItem(key));\r\n  return data === null ? defaultData : data;\r\n};\r\n\r\nexport const setJSON = (key, data) => {\r\n  localStorage.setItem(key, JSON.stringify(data));\r\n};\r\n","import \"../styleSheets/layout/_noRespond.scss\";\r\n\r\nconst NoRespond = () => {\r\n  return (\r\n    <p className=\"noRespond\">\r\n      Sorry, There are no questions for the moment. Try again later{\" \"}\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default NoRespond;\r\n","import \"../styleSheets/layout/_loading.scss\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <p className=\"loading\">\r\n      Waiting for interesting questions about numbers...\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import \"../styleSheets/layout/_choiceList.scss\";\r\n\r\nconst ChoicesList = (props) => {\r\n  return props.choices.map((choice, id) => {\r\n    return (\r\n      <div key={id} id={id} className=\"answersList\">\r\n        <label className=\"answersList__answer\">\r\n          <span className=\"answersList__btn\"></span>\r\n          <input\r\n            type=\"radio\"\r\n            id={choice}\r\n            value={choice}\r\n            name=\"options\"\r\n            className=\"answersList__radio\"\r\n            onClick={props.saveUserAnswer}\r\n          ></input>\r\n          {choice}\r\n        </label>\r\n      </div>\r\n    );\r\n  });\r\n};\r\n\r\nexport default ChoicesList;\r\n","import \"../styleSheets/layout/_questions.scss\";\r\nimport ChoicesList from \"./ChoicesList\";\r\n\r\nconst Questions = (props) => {\r\n  return (\r\n    <>\r\n      <p className=\"mainPage__count\">Question {props.count} of 10</p>\r\n      <div className=\"question\">\r\n        <p className=\"question__text\">{props.question}</p>\r\n        <form className=\"respondList\">\r\n          <ChoicesList\r\n            saveUserAnswer={props.saveUserAnswer}\r\n            choices={props.answers}\r\n          />\r\n        </form>\r\n      </div>\r\n      <div className=\"buttons\">\r\n        <button\r\n          className=\"buttons__confirm\"\r\n          type=\"button\"\r\n          onClick={props.handleConfirmAnswer}\r\n        >\r\n          Confirm\r\n        </button>\r\n        <button\r\n          className=\"buttons__skip\"\r\n          type=\"button\"\r\n          onClick={props.handleSkip}\r\n        >\r\n          Skip\r\n        </button>\r\n        <button\r\n          className=\"buttons__new\"\r\n          type=\"button\"\r\n          onClick={props.handleReset}\r\n        >\r\n          New game\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Questions;\r\n","import \"../styleSheets/layout/_results.scss\";\r\n\r\nconst Results = (props) => {\r\n  return props.answersList.map((answer, id) => {\r\n    if (answer.isCorrect) {\r\n      return (\r\n        <div key={id} className=\"answerList\">\r\n          <div className=\"answerList__line\"></div>\r\n          <div className=\"answerList__container\">\r\n            <p className=\"answerList__question\">{answer.text}</p>\r\n            <div className=\"answerList__answer\">\r\n              <i className=\"fas fa-check-circle answerList__answer--correctIcon\"></i>\r\n              <p className=\"answerList__answer--number\">{answer.number}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div key={id} className=\"answerList\">\r\n          <div className=\"answerList__line\"></div>\r\n          <div className=\"answerList__container\">\r\n            <p className=\"answerList__question\">{answer.text}</p>\r\n            <div className=\"answerList__answer\">\r\n              <i className=\"fas fa-times-circle answerList__answer--wrongIcon\"></i>\r\n              <p className=\"answerList__answer--skip\">Fail</p>\r\n              <p className=\"answerList__answer--text\">\r\n                - Right answer was {answer.number}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  });\r\n};\r\n\r\nexport default Results;\r\n","import \"../styleSheets/layout/_finalGame.scss\";\r\n\r\nconst FinalGame = (props) => {\r\n  return (\r\n    <>\r\n      <button\r\n        className=\"playAgainBtn\"\r\n        type=\"button\"\r\n        onClick={props.handleReset}\r\n      >\r\n        Play Again\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FinalGame;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../styleSheets/layout/_mainPage.scss\";\r\nimport { generateQuestionWithAnswers } from \"../services/getDataFromApi\";\r\nimport { getJSON, setJSON } from \"../services/localStorage\";\r\nimport NoRespond from \"./NoRespond\";\r\nimport Loading from \"./Loading\";\r\nimport Questions from \"./Questions\";\r\nimport Results from \"./Results\";\r\nimport FinalGame from \"./FinalGame\";\r\n\r\nconst MainPage = () => {\r\n  const [trivia, setTrivia] = useState({ choices: [] });\r\n  const [userAnswer, setUserAnswer] = useState();\r\n  const [count, setCount] = useState(getJSON(\"count\", 1));\r\n  const [answersList, setAnswersList] = useState(getJSON(\"answersList\", []));\r\n\r\n  //Load the first time\r\n  useEffect(() => {\r\n    if (getJSON(\"trivia\", {}).text) {\r\n      setTrivia(getJSON(\"trivia\"));\r\n    } else {\r\n      generateQuestionWithAnswers().then((data) => setTrivia(data));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setJSON(\"trivia\", trivia);\r\n  }, [trivia]);\r\n\r\n  useEffect(() => {\r\n    setJSON(\"count\", count);\r\n    setJSON(\"answersList\", answersList);\r\n  }, [count, answersList]);\r\n\r\n  console.log(trivia.number);\r\n\r\n  const saveUserAnswer = (e) => {\r\n    const selectedItem = parseInt(e.currentTarget.id);\r\n    setUserAnswer(selectedItem);\r\n  };\r\n\r\n  const handleCount = () => {\r\n    setCount(count + 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setUserAnswer();\r\n    setCount(1);\r\n    setAnswersList([]);\r\n    generateQuestionWithAnswers().then((data) => setTrivia(data));\r\n  };\r\n\r\n  const handleAnswersList = () => {\r\n    setAnswersList(answersList.concat([trivia]));\r\n  };\r\n\r\n  const handleNextQuestion = () => {\r\n    handleAnswersList();\r\n    handleCount();\r\n    setUserAnswer();\r\n    generateQuestionWithAnswers().then((data) => setTrivia(data));\r\n  };\r\n\r\n  const handleConfirmAnswer = () => {\r\n    if (userAnswer) {\r\n      trivia.userAnswer = userAnswer;\r\n      trivia.isCorrect = checkAnswer(trivia);\r\n      handleNextQuestion();\r\n    }\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    handleNextQuestion();\r\n  };\r\n\r\n  const checkAnswer = (answerTrivia) => {\r\n    return answerTrivia.userAnswer === answerTrivia.number;\r\n  };\r\n\r\n  const printHTML = () => {\r\n    if (!trivia.text && !trivia.error) {\r\n      return <Loading />;\r\n    } else if (trivia.error) {\r\n      return <NoRespond />;\r\n    } else {\r\n      if (answersList.length === 10) {\r\n        return (\r\n          <>\r\n            <Results answersList={answersList} />\r\n            <FinalGame answersList={answersList} handleReset={handleReset} />\r\n          </>\r\n        );\r\n      } else {\r\n        return (\r\n          <>\r\n            <Questions\r\n              question={trivia.text}\r\n              answers={trivia.choices}\r\n              handleNextQuestion={handleNextQuestion}\r\n              saveUserAnswer={saveUserAnswer}\r\n              count={count}\r\n              handleConfirmAnswer={handleConfirmAnswer}\r\n              handleSkip={handleSkip}\r\n              handleReset={handleReset}\r\n            />\r\n            <Results answersList={answersList} />\r\n          </>\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <main>\r\n        <h1 className=\"title\">Trividabo</h1>\r\n        <div className=\"mainPage\">{printHTML()}</div>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import \"../styleSheets/App.scss\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Landing from \"./Landing\";\nimport MainPage from \"./MainPage\";\n\nconst App = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Landing} />\n      <Route path=\"/MainPage\" component={MainPage} />\n    </Switch>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}