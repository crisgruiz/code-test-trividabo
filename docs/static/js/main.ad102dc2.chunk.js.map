{"version":3,"sources":["services/getDataFromApi.js","components/Landing.js","services/localStorage.js","components/ChoicesList.js","components/Questions.js","components/FinalGame.js","components/MainPage.js","components/App.js","index.js"],"names":["Landing","className","to","title","React","Component","randomNum","Math","floor","random","questionsArr","i","randomNumber","push","generateAnswers","correctOption","arr","a","includes","length","sort","generateQuestion","question","questionSplited","split","questionJoined","join","substring","generateQuestionWithAnswers","fetch","then","response","json","data","text","number","choices","key","defaultData","JSON","parse","localStorage","getItem","setItem","stringify","ChoicesList","props","map","choice","id","type","value","name","onClick","saveUserAnswer","Questions","count","answers","handleConfirmAnswer","handleSkip","handleReset","handleResults","FinalGame","MainPage","useState","trivia","setTrivia","userAnswer","setUserAnswer","setCount","answersList","setAnswersList","useEffect","console","log","e","selectedItem","parseInt","currentTarget","handleNextQuestion","concat","isCorrect","checkAnswer","answerTrivia","answer","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad102dc2.chunk.js","sourcesContent":["const randomNum = () => {\r\n  return Math.floor(Math.random() * 100);\r\n};\r\n\r\nconst getDataFromApi = (a) => {\r\n  return fetch(`http://numbersapi.com/${a || randomNum()}/trivia?json`).then(\r\n    (response) => response.json()\r\n  );\r\n};\r\n\r\nlet questionsArr = [];\r\nfor (let i = 0; i < 10; i++) {\r\n  let randomNumber = Math.floor(Math.random() * 100);\r\n  questionsArr.push(randomNumber);\r\n}\r\n\r\n// const getDataFromApi10Numbers = () => {\r\n//   return fetch(\r\n//     `http://numbersapi.com/${questionsArr[0]},${questionsArr[1]},${questionsArr[2]},${questionsArr[3]},${questionsArr[4]},${questionsArr[5]},${questionsArr[6]},${questionsArr[7]},${questionsArr[8]},${questionsArr[9]}/trivia?json`\r\n//   ).then((response) => response.json());\r\n// };\r\n\r\n// const getDataFromApiFor100NUmbers = () => {\r\n//   return fetch(`http://numbersapi.com/1..100}/trivia?json`).then((response) =>\r\n//     response.json()\r\n//   );\r\n// };\r\n\r\nconst generateAnswers = (correctOption) => {\r\n  const arr = [correctOption];\r\n  do {\r\n    const a = randomNum();\r\n    if (!arr.includes(a)) {\r\n      arr.push(a);\r\n    }\r\n  } while (arr.length < 4);\r\n  return arr.sort();\r\n};\r\n\r\nconst generateQuestion = (question) => {\r\n  const questionSplited = question.split(\" \");\r\n  questionSplited[0] = \"What\";\r\n  const questionJoined = questionSplited.join(\" \");\r\n  const questionWithoutDot = questionJoined.substring(\r\n    0,\r\n    questionJoined.length - 1\r\n  );\r\n  return questionWithoutDot + \"?\";\r\n};\r\n\r\nconst generateQuestionWithAnswers = () => {\r\n  return getDataFromApi().then((data) => {\r\n    const trivia = {\r\n      text: generateQuestion(data.text),\r\n      number: data.number,\r\n      choices: generateAnswers(data.number),\r\n    };\r\n    return trivia;\r\n  });\r\n};\r\n\r\nexport {\r\n  randomNum,\r\n  getDataFromApi,\r\n  generateAnswers,\r\n  generateQuestion,\r\n  generateQuestionWithAnswers,\r\n};\r\n// export default getDataFromApiFor100NUmbers;\r\n","import React from \"react\";\r\nimport \"../styleSheets/layout/_landing.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Landing extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <main className=\"main\">\r\n          <h1 className=\"main__title\">Trividabo</h1>\r\n          <p className=\"main__text\">Welcome to trividabo number quiz</p>\r\n          <Link to=\"/MainPage\" className=\"main__button\" title=\"Start\">\r\n            Start\r\n          </Link>\r\n        </main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Landing;\r\n","const get = (key, defaultData) => {\r\n  const data = JSON.parse(localStorage.getItem(key));\r\n  return data === null ? defaultData : data;\r\n};\r\n\r\nconst set = (key, data) => {\r\n  localStorage.setItem(key, JSON.stringify(data));\r\n};\r\n\r\nexport default {\r\n  get,\r\n  set,\r\n};\r\n","const ChoicesList = (props) => {\r\n  return props.choices.map((choice, id) => {\r\n    return (\r\n      <div key={id} id={id} className=\"answersList\">\r\n        <label className=\"answersList__answer\">\r\n          <span className=\"answersList__btn\"></span>\r\n          <input\r\n            type=\"radio\"\r\n            id={choice}\r\n            value={choice}\r\n            name=\"options\"\r\n            className=\"answersList__radio\"\r\n            onClick={props.saveUserAnswer}\r\n          ></input>\r\n          {choice}\r\n        </label>\r\n      </div>\r\n    );\r\n  });\r\n};\r\n\r\nexport default ChoicesList;\r\n","import \"../styleSheets/layout/_questions.scss\";\r\nimport ChoicesList from \"./ChoicesList\";\r\n\r\nconst Questions = (props) => {\r\n  return (\r\n    <>\r\n      <p className=\"mainPage__count\">Question {props.count} of 10</p>\r\n      <div className=\"question\">\r\n        <p className=\"question__text\">{props.question}</p>\r\n        <form className=\"respondList\">\r\n          <ChoicesList\r\n            saveUserAnswer={props.saveUserAnswer}\r\n            choices={props.answers}\r\n          />\r\n        </form>\r\n      </div>\r\n      <div className=\"buttons\">\r\n        <button\r\n          className=\"buttons__confirm\"\r\n          type=\"button\"\r\n          onClick={props.handleConfirmAnswer}\r\n        >\r\n          Confirm\r\n        </button>\r\n        <button\r\n          className=\"buttons__skip\"\r\n          type=\"button\"\r\n          onClick={props.handleSkip}\r\n        >\r\n          Skip\r\n        </button>\r\n        <button\r\n          className=\"buttons__new\"\r\n          type=\"button\"\r\n          onClick={props.handleReset}\r\n        >\r\n          New game\r\n        </button>\r\n      </div>\r\n      <div className=\"resultList\">{props.handleResults()}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Questions;\r\n","import \"../styleSheets/layout/_finalGame.scss\";\r\n\r\nconst FinalGame = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"resultList\">{props.handleResults()}</div>\r\n      <button\r\n        className=\"playAgainBtn\"\r\n        type=\"button\"\r\n        onClick={props.handleReset}\r\n      >\r\n        Play Again\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FinalGame;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../styleSheets/layout/_mainPage.scss\";\r\nimport { generateQuestionWithAnswers } from \"../services/getDataFromApi\";\r\nimport localStorage from \"../services/localStorage\";\r\nimport Questions from \"./Questions\";\r\nimport FinalGame from \"./FinalGame\";\r\n\r\nconst MainPage = () => {\r\n  const [trivia, setTrivia] = useState({ choices: [] });\r\n  const [userAnswer, setUserAnswer] = useState();\r\n  const [count, setCount] = useState(localStorage.get(\"count\", 1));\r\n  const [answersList, setAnswersList] = useState(\r\n    localStorage.get(\"answersList\", [])\r\n  );\r\n\r\n  //Call to API data\r\n  useEffect(() => {\r\n    if (localStorage.get(\"trivia\")) {\r\n      setTrivia(localStorage.get(\"trivia\"));\r\n    } else {\r\n      generateQuestionWithAnswers().then((data) => setTrivia(data));\r\n    }\r\n  }, []);\r\n\r\n  //LocalStorage\r\n\r\n  useEffect(() => {\r\n    localStorage.set(\"trivia\", trivia);\r\n  }, [trivia]);\r\n\r\n  useEffect(() => {\r\n    localStorage.set(\"count\", count);\r\n    localStorage.set(\"answersList\", answersList);\r\n  }, [count, answersList]);\r\n\r\n  console.log(trivia.number);\r\n\r\n  const saveUserAnswer = (e) => {\r\n    const selectedItem = parseInt(e.currentTarget.id);\r\n    setUserAnswer(selectedItem);\r\n  };\r\n\r\n  const handleCount = () => {\r\n    setCount(count + 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setUserAnswer();\r\n    setCount(1);\r\n    setAnswersList([]);\r\n    generateQuestionWithAnswers().then((data) => setTrivia(data));\r\n  };\r\n\r\n  const handleAnswersList = () => {\r\n    setAnswersList(answersList.concat([trivia]));\r\n  };\r\n\r\n  const handleNextQuestion = () => {\r\n    handleAnswersList();\r\n    handleCount();\r\n    setUserAnswer();\r\n    generateQuestionWithAnswers().then((data) => setTrivia(data));\r\n  };\r\n\r\n  const handleConfirmAnswer = () => {\r\n    if (userAnswer) {\r\n      trivia.userAnswer = userAnswer;\r\n      trivia.isCorrect = checkAnswer(trivia);\r\n      handleNextQuestion();\r\n    }\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    handleNextQuestion();\r\n  };\r\n\r\n  const checkAnswer = (answerTrivia) => {\r\n    return answerTrivia.userAnswer === answerTrivia.number;\r\n  };\r\n\r\n  const handleResults = () => {\r\n    return answersList.map((answer, id) => {\r\n      if (answer.isCorrect) {\r\n        return (\r\n          <div key={id} className=\"answerList\">\r\n            <div className=\"answerList__line\"></div>\r\n            <div className=\"answerList__container\">\r\n              <p>{answer.text}</p>\r\n              <div className=\"answerList__answer\">\r\n                <i className=\"fas fa-check-circle answerList__answer--icon\"></i>\r\n                <p className=\"answerList__answer--number\">{answer.number}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div key={id} className=\"answerList\">\r\n            <div className=\"answerList__line\"></div>\r\n            <div className=\"answerList__container\">\r\n              <p>{answer.text}</p>\r\n              <div className=\"answerList__answer\">\r\n                <i className=\"fas fa-times-circle answerList__answer--icon\"></i>\r\n                <p className=\"answerList__answer--skip\">Skipped</p>\r\n                <p className=\"answerList__answer--number\">\r\n                  - Right answer was {answer.number}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  const showThings = () => {\r\n    if (answersList.length === 10) {\r\n      return (\r\n        <FinalGame\r\n          answersList={answersList}\r\n          handleReset={handleReset}\r\n          handleResults={handleResults}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <Questions\r\n          question={trivia.text}\r\n          answers={trivia.choices}\r\n          handleNextQuestion={handleNextQuestion}\r\n          saveUserAnswer={saveUserAnswer}\r\n          count={count}\r\n          handleConfirmAnswer={handleConfirmAnswer}\r\n          handleSkip={handleSkip}\r\n          handleReset={handleReset}\r\n          handleResults={handleResults}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  console.log(answersList);\r\n\r\n  return (\r\n    <>\r\n      <main>\r\n        <h1 className=\"title\">Trividabo</h1>\r\n        <div className=\"mainPage\">{showThings()}</div>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import \"../styleSheets/App.scss\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Landing from \"./Landing\";\nimport MainPage from \"./MainPage\";\n\nconst App = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Landing} />\n      <Route path=\"/MainPage\" component={MainPage} />\n    </Switch>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}